apply plugin: 'application'
apply plugin: 'java-library'
compileJava.options.encoding='UTF-8' //这一句可以防止项目中文乱码
//version = gradle.ext.taskjarversion
buildscript {
	  repositories {
			mavenLocal()
			mavenCentral() 
   			jcenter() {url "http://jcenter.bintray.com/"}
			maven {url "https://plugins.gradle.org/m2/"}
		}
	  dependencies {tasks.withType(JavaCompile) {options.encoding = "UTF-8"}}
}
allprojects {  
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'eclipse'
	sourceCompatibility = 1.8   // 设置 JDK 版本
	targetCompatibility = 1.8
}
repositories {
	maven {url "http://www.ebi.ac.uk/intact/maven/nexus/content/repositories/ebi-repo/"}
	maven {url "http://maven.nuiton.org/release/"}
	maven {url "http://central.maven.org/maven2/"}
   	jcenter() {url "http://jcenter.bintray.com/"}
}
dependencies {
	compile project(':des-wkope-task')
	compile(
	'org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:4.3',
	'net.sf.ucanaccess:ucanaccess:4.0.4',
	'com.healthmarketscience.jackcess:jackcess:2.2.0',
	
	'org.jsoup:jsoup:1.10.3',
	/* json */
	'com.alibaba:fastjson:1.2.45',
	'dom4j:dom4j:1.6.1',	
	'net.sourceforge.cpdetector:cpdetector:1.0.7',
	'com.google.guava:guava:25.0-jre',
	/*'org.eclipse:jface:3.3.0-I20070606-0010',*/
	'log4j:log4j:1.2.17'
	)
	compile fileTree(dir: 'libs', include: ['*.jar'])
}

sourceSets {
    main {
        resources {
            srcDirs =["src/main","src/main/java","src/main/resources"]
            exclude "/"
            exclude "**/*"
        }
    }
}
jar {
	println gradle.ext.taskjarprintln
	doFirst{
		copy {
			from  'src/main/resources/'
			into 'build/classes/main/'
			include '**/*.*'
	     }
    }
    manifest {
        attributes (
        		'Manifest-Version' : gradle.ext.taskjarversion ,
        		'Implementation-Title': gradle.ext.taskjarfile ,
                'Implementation-Version' : gradle.ext.taskjarversion,
                'Created-By': gradle.ext.taskvendor
        )
    }
    /* 拷贝jar文件到项目目录里 */
    doLast {
    	delete gradle.ext.taskmodelpath+"/" + gradle.ext.taskjarmodelfilename
        copy {
    		from( 'build/libs')
    		into(gradle.ext.taskmodelpath)
    		include(gradle.ext.taskjarfilename)
    		rename(gradle.ext.taskjarfilename,gradle.ext.taskjarmodelfilename)
        }
    	//delete "build/libs/" + gradle.ext.taskjarfilename
    }
}
